{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","alt-svc":"h3=\":443\"; ma=86400","cf-ray":"8d7a5815d9c7d493-NRT","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=UTF-8","date":"Thu, 24 Oct 2024 13:34:23 GMT","nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}","report-to":"{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=l6WBanf3XEg82XZZCgiBdZc8DQ6cr%2FGe4nuTvwClHQGnbPYrQwvLRSD%2B7I%2FnK1DrB8J7UDWFGO2eO6TJnel3%2Bz7hKTIllSnrMirIV0nsoZl7ajUzy%2FjXOld%2BTJLOStoecKO%2FlToo6s8fb24d2Avzso%2FwopN6ByY%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}","server":"cloudflare","server-timing":"cfL4;desc=\"?proto=TCP&rtt=46240&sent=4&recv=5&lost=0&retrans=0&sent_bytes=2876&recv_bytes=706&delivery_rate=60607&cwnd=252&unsent_bytes=0&cid=001c5a63a6300d6d&ts=103&x=0\"","transfer-encoding":"chunked","vary":"Accept-Encoding"},"body":"","status":200,"url":"https://nomad-movies.nomadcoders.workers.dev/movies"},"revalidate":31536000,"tags":[]}